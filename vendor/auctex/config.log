This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by auctex configure 11.85, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  $ ./configure --with-emacs=/Applications/Emacs.app/Contents/MacOS/Emacs --with-lispdir=/Applications/Emacs.app/Contents/Resources/site-lisp --without-texmf-dir

## --------- ##
## Platform. ##
## --------- ##

hostname = Iolar.local
uname -m = i386
uname -r = 10.2.0
uname -s = Darwin
uname -v = Darwin Kernel Version 10.2.0: Tue Nov  3 10:37:10 PST 2009; root:xnu-1486.2.11~1/RELEASE_I386

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 10.2.0: Tue Nov  3 10:37:10 PST 2009; root:xnu-1486.2.11~1/RELEASE_I386
Kernel configured for up to 2 processors.
2 processors are physically available.
2 processors are logically available.
Processor type: i486 (Intel 80486)
Processors active: 0 1
Primary memory available: 4.00 gigabytes
Default processor set: 91 tasks, 371 threads, 2 processors
Load average: 0.41, Mach factor: 1.58
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/bin
PATH: /bin
PATH: /usr/sbin
PATH: /sbin
PATH: /usr/local/bin
PATH: /usr/texbin
PATH: /usr/X11/bin
PATH: /usr/X11R6/bin
PATH: /Users/kjhealy/bin
PATH: /bin
PATH: /sbin
PATH: /usr/bin
PATH: /usr/sbin
PATH: /usr/X11R6/bin
PATH: /usr/local/bin
PATH: /Users/kjhealy/bin
PATH: /Users/kjhealy/.gem/ruby/1.8/bin
PATH: /Users/kjhealy/.cabal/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1699: checking for make
configure:1715: found /usr/bin/make
configure:1726: result: make
configure:1744: checking whether make sets $(MAKE)
configure:1765: result: yes
configure:1818: checking for a BSD-compatible install
configure:1874: result: /usr/bin/ginstall -c
configure:1887: checking for date in ChangeLog
configure:1896: result: 2008-02-10
configure:1898: checking for release in ChangeLog
configure:1907: result: 11.85
configure:1962: checking for /Applications/Emacs.app/Contents/MacOS/Emacs
configure:1992: result: /Applications/Emacs.app/Contents/MacOS/Emacs
configure:2010: checking if /Applications/Emacs.app/Contents/MacOS/Emacs is XEmacs
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((x (if (featurep (quote xemacs)) "yes" "no"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499"))
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> no
configure:2032: result: no
configure:2036: checking for Emacs prefix
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((cmd(pop command-line-args-left))(x (condition-case nil (let*
    ((prefix (directory-file-name (file-name-directory (executable-find cmd))))
     (parent (directory-file-name (file-name-directory prefix))))
    (if (string= (file-name-nondirectory prefix) "bin")
        (setq prefix parent)
      (if (string= (file-name-nondirectory parent) "bin")
         (setq prefix (directory-file-name (file-name-directory parent)))))
    prefix) (error NONE)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499")) /Applications/Emacs.app/Contents/MacOS/Emacs
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> /Applications/Emacs.app/Contents/MacOS
configure:2055: result: "/Applications/Emacs.app/Contents/MacOS"
configure:2087: checking if Emacs is recent enough
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((x (cond ((< emacs-major-version 21) "no")
			 ((> emacs-major-version 21) "yes")
			 ((< emacs-minor-version 01) "no")
			 (t "yes")))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499"))
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> yes
configure:2101: result: yes
configure:2113: checking for MULE support
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -eval (let* ((x (condition-case nil (require 'mule ) 	(error (prog1 nil (message "mule not found")))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499"))
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> mule
configure:2147: result: yes
configure:2194: checking if build directory is valid
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -eval (let* ((x (if (or (member (directory-file-name default-directory) load-path)	      (member (file-name-as-directory default-directory) load-path))	 "no" "yes"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499"))
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> yes
configure:2212: result: yes
configure:2302: checking where lisp files go
configure:2377: result: /Applications/Emacs.app/Contents/Resources/site-lisp
configure:2381: checking what file to use for auctex startup
configure:2408: result: /Applications/Emacs.app/Contents/Resources/site-lisp/auctex.el
configure:2426: checking where the package lisp files go
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\`\.\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\`\.\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499")) /Applications/Emacs.app/Contents/Resources/site-lisp/auctex /Applications/Emacs.app/Contents/Resources/site-lisp /Applications/Emacs.app/Contents/Resources/site-lisp/tex-site.el
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2507: result: /Applications/Emacs.app/Contents/Resources/site-lisp/auctex
configure:2510: checking where the data files go
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\`\.\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\`\.\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499")) /Applications/Emacs.app/Contents/Resources/site-lisp/auctex /Applications/Emacs.app/Contents/Resources/site-lisp /Applications/Emacs.app/Contents/Resources/site-lisp/tex-site.el
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2591: result: /Applications/Emacs.app/Contents/Resources/site-lisp/auctex
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\`\.\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\`\.\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499"))  /Applications/Emacs.app/Contents/Resources/site-lisp /Applications/Emacs.app/Contents/Resources/site-lisp/auctex.el tex-site.el
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> (expand-file-name "tex-site.el" (file-name-directory load-file-name))
configure:2668: checking where the info files go
configure:2670: result: ${datarootdir}/info
configure:2681: checking where automatically generated global style hooks go
configure:2691: result: ${localstatedir}/auctex
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\`\.\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\`\.\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-2499")) /usr/local/var/auctex /Applications/Emacs.app/Contents/Resources/site-lisp /Applications/Emacs.app/Contents/Resources/site-lisp/tex-site.el
Wrote /Users/kjhealy/.emacs.d/vendor/auctex/conftest-2499
=> "/usr/local/var/auctex"
configure:2771: checking for tex
configure:2789: found /usr/texbin/tex
configure:2802: result: /usr/texbin/tex
configure:2812: checking for pdftex
configure:2830: found /usr/texbin/pdftex
configure:2843: result: /usr/texbin/pdftex
configure:2853: checking for dvips
configure:2871: found /usr/texbin/dvips
configure:2884: result: /usr/texbin/dvips
configure:2899: checking for perl
configure:2917: found /usr/bin/perl
configure:2930: result: /usr/bin/perl
configure:2944: checking for makeinfo
configure:2962: found /usr/bin/makeinfo
configure:2975: result: /usr/bin/makeinfo
configure:2985: checking for texi2html
configure:3003: found /usr/bin/texi2html
configure:3016: result: /usr/bin/texi2html
configure:3026: checking for texi2dvi
configure:3044: found /usr/bin/texi2dvi
configure:3057: result: /usr/bin/texi2dvi
configure:3067: checking for texi2pdf
configure:3085: found /usr/bin/texi2pdf
configure:3098: result: /usr/bin/texi2pdf
configure:3113: checking for install-info
configure:3131: found /usr/bin/install-info
configure:3144: result: /usr/bin/install-info
configure:3397: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by auctex config.status 11.85, which was
generated by GNU Autoconf 2.61.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on Iolar.local

config.status:603: creating Makefile
config.status:603: creating tex-site.el.out
config.status:603: creating doc/Makefile
config.status:603: creating auctex.el
configure:4370: === configuring in preview (/Users/kjhealy/.emacs.d/vendor/auctex/preview)
configure:4473: running /bin/sh ./configure '--prefix=/usr/local'  '--with-emacs=/Applications/Emacs.app/Contents/MacOS/Emacs' '--with-lispdir=/Applications/Emacs.app/Contents/Resources/site-lisp' '--without-texmf-dir' --cache-file=/dev/null --srcdir=.

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_env_INSTALL_INFO_set=
ac_cv_env_INSTALL_INFO_value=
ac_cv_env_MAKEINFO_set=
ac_cv_env_MAKEINFO_value=
ac_cv_env_PERL_set=
ac_cv_env_PERL_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_path_DVIPS=/usr/texbin/dvips
ac_cv_path_EMACS=/Applications/Emacs.app/Contents/MacOS/Emacs
ac_cv_path_INSTALL_INFO=/usr/bin/install-info
ac_cv_path_MAKEINFO=/usr/bin/makeinfo
ac_cv_path_PDFTEX=/usr/texbin/pdftex
ac_cv_path_PERL=/usr/bin/perl
ac_cv_path_TEX=/usr/texbin/tex
ac_cv_path_TEXI2DVI=/usr/bin/texi2dvi
ac_cv_path_TEXI2HTML=/usr/bin/texi2html
ac_cv_path_TEXI2PDF=/usr/bin/texi2pdf
ac_cv_path_install='/usr/bin/ginstall -c'
ac_cv_prog_MAKECMD=make
ac_cv_prog_make_make_set=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

AUCTEXDATE='2008-02-10'
AUCTEXVERSION='11.85'
DEFS='-DPACKAGE_NAME=\"auctex\" -DPACKAGE_TARNAME=\"auctex\" -DPACKAGE_VERSION=\"11.85\" -DPACKAGE_STRING=\"auctex\ 11.85\" -DPACKAGE_BUGREPORT=\"bug-auctex@gnu.org\"'
DVIPS='/usr/texbin/dvips'
ECHO_C='ECHO_N=''
ECHO_T=''
EMACS='/Applications/Emacs.app/Contents/MacOS/Emacs'
EMACS_FLAVOR='emacs'
HAVE_mule='yes'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_INFO='/usr/bin/install-info'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
MAKECMD='make'
MAKEINFO='/usr/bin/makeinfo'
MULEELC='tex-jp.elc'
MULESRC='tex-jp.el'
PACKAGE_BUGREPORT='bug-auctex@gnu.org'
PACKAGE_NAME='auctex'
PACKAGE_STRING='auctex 11.85'
PACKAGE_TARNAME='auctex'
PACKAGE_VERSION='11.85'
PATH_SEPARATOR=':'
PDFTEX='/usr/texbin/pdftex'
PERL='/usr/bin/perl'
SET_MAKE=''
SHELL='/bin/sh'
TEX='/usr/texbin/tex'
TEXI2DVI='/usr/bin/texi2dvi'
TEXI2HTML='/usr/bin/texi2html'
TEXI2PDF='/usr/bin/texi2pdf'
XEMACS='no'
auctexstartfile='/Applications/Emacs.app/Contents/Resources/site-lisp/auctex.el'
autodir='${localstatedir}/auctex'
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host_alias=''
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
lispautodir='"/usr/local/var/auctex"'
lispdir='/Applications/Emacs.app/Contents/Resources/site-lisp'
lisppackagedatadir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagelispdir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisptexsite='(expand-file-name "tex-site.el" (file-name-directory load-file-name))'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
packagedatadir='/Applications/Emacs.app/Contents/Resources/site-lisp/auctex'
packagedir='no'
packagelispdir='/Applications/Emacs.app/Contents/Resources/site-lisp/auctex'
pdfdir='${docdir}'
prefix='/usr/local'
preview_enabled='yes'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
subdirs=' preview'
sysconfdir='${prefix}/etc'
target_alias=''
texsite=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

#define PACKAGE_NAME "auctex"
#define PACKAGE_TARNAME "auctex"
#define PACKAGE_VERSION "11.85"
#define PACKAGE_STRING "auctex 11.85"
#define PACKAGE_BUGREPORT "bug-auctex@gnu.org"

configure: exit 0
